{"ts":1366581577408,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"class User < ActiveRecord::Base\n  rolify\n  # Include default devise modules. Others available are:\n  # :token_authenticatable, :confirmable,\n  # :lockable, :timeoutable and :omniauthable\n  devise :database_authenticatable, :registerable,\n         :recoverable, :rememberable, :trackable, :validatable\n\n  # Setup accessible (or protected) attributes for your model\n  attr_accessible :role_ids, :as => :admin\n  attr_accessible :name, :email, :password, :password_confirmation, :remember_me\n  \nend\n"]],"start1":0,"start2":0,"length1":0,"length2":495}]],"length":495}
{"contributors":[],"silentsave":false,"ts":1366581599939,"patch":[[{"diffs":[[0,"del\n"],[-1,"  attr_accessible :role_ids, :as => :admin\n"],[0,"  at"]],"start1":360,"start2":360,"length1":51,"length2":8}]],"length":452,"saved":false}
{"contributors":[],"silentsave":false,"ts":1366588336265,"patch":[[{"diffs":[[0,"r_me"],[-1,"\n  "],[1,", :stripe_token, :coupon\n  attr_accessor :stripe_token, :coupon\n"],[0,"\nend"],[-1,"\n"]],"start1":440,"start2":440,"length1":12,"length2":72}]],"length":512,"saved":false}
{"contributors":[],"silentsave":false,"ts":1366598457589,"patch":[[{"diffs":[[0,"coupon\n\n"],[1,"  before_save :update_stripe\n\n  def update_stripe\n    return if email.include?(ENV['ADMIN_EMAIL'])\n    return if email.include?('@example.com') and not Rails.env.production?\n    if customer_id.nil?\n      if !stripe_token.present?\n        raise \"Stripe token not present. Can't create account.\"\n      end\n      if coupon.blank?\n        customer = Stripe::Customer.create(\n          :email => email,\n          :description => name,\n          :card => stripe_token,\n          :plan => roles.first.name\n        )\n      else\n        customer = Stripe::Customer.create(\n          :email => email,\n          :description => name,\n          :card => stripe_token,\n          :plan => roles.first.name,\n          :coupon => coupon\n        )\n      end\n    else\n      customer = Stripe::Customer.retrieve(customer_id)\n      if stripe_token.present?\n        customer.card = stripe_token\n      end\n      customer.email = email\n      customer.description = name\n      customer.save\n    end\n    self.last_4_digits = customer.active_card.last4\n    self.customer_id = customer.id\n    self.stripe_token = nil\n  rescue Stripe::StripeError => e\n    logger.error \"Stripe Error: \" + e.message\n    errors.add :base, \"#{e.message}.\"\n    self.stripe_token = nil\n    false\n  end\n\n"],[0,"end"]],"start1":501,"start2":501,"length1":11,"length2":1264}]],"length":1765,"saved":false}
{"ts":1366680672914,"patch":[[{"diffs":[[0,":coupon\n"],[-1,"\n"],[0,"  before"]],"start1":500,"start2":500,"length1":17,"length2":16},{"diffs":[[0,"e_stripe"],[1,"\n  before_destroy :cancel_subscription"],[0,"\n\n  def "]],"start1":528,"start2":528,"length1":16,"length2":54},{"diffs":[[0,"\n  end\n\n"],[1,"  def cancel_subscription\n    unless customer_id.nil?\n      customer = Stripe::Customer.retrieve(customer_id)\n      unless customer.nil? or customer.respond_to?('deleted')\n        if customer.subscription.status == 'active'\n          customer.cancel_subscription\n        end\n      end\n    end\n  rescue Stripe::StripeError => e\n    logger.error \"Stripe Error: \" + e.message\n    errors.add :base, \"Unable to cancel your subscription. #{e.message}.\"\n    false\n  end\n\n"],[0,"end"]],"start1":1791,"start2":1791,"length1":11,"length2":475}]],"length":2266,"saved":false}
{"ts":1366680758661,"patch":[[{"diffs":[[0,"iption\n\n"],[1,"  def update_plan(role)\n    self.role_ids = []\n    self.add_role(role.name)\n    unless customer_id.nil?\n      customer = Stripe::Customer.retrieve(customer_id)\n      customer.update_subscription(:plan => role.name)\n    end\n    true\n  rescue Stripe::StripeError => e\n    logger.error \"Stripe Error: \" + e.message\n    errors.add :base, \"Unable to update your subscription. #{e.message}.\"\n    false\n  end\n\n"],[0,"  def up"]],"start1":568,"start2":568,"length1":16,"length2":419}]],"length":2669,"saved":false}
