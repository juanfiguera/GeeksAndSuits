{"ts":1366580184369,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"### UTILITY METHODS ###\n\ndef create_visitor\n  @visitor ||= { :name => \"Testy McUserton\", :email => \"example@example.com\",\n    :password => \"changeme\", :password_confirmation => \"changeme\" }\nend\n\ndef find_user\n  @user ||= User.first conditions: {:email => @visitor[:email]}\nend\n\ndef create_unconfirmed_user\n  create_visitor\n  delete_user\n  sign_up\n  visit '/users/sign_out'\nend\n\ndef create_user\n  create_visitor\n  delete_user\n  @user = FactoryGirl.create(:user, email: @visitor[:email])\nend\n\ndef delete_user\n  @user ||= User.first conditions: {:email => @visitor[:email]}\n  @user.destroy unless @user.nil?\nend\n\ndef sign_up\n  delete_user\n  visit '/users/sign_up'\n  fill_in \"Name\", :with => @visitor[:name]\n  fill_in \"Email\", :with => @visitor[:email]\n  fill_in \"user_password\", :with => @visitor[:password]\n  fill_in \"user_password_confirmation\", :with => @visitor[:password_confirmation]\n  click_button \"Sign up\"\n  find_user\nend\n\ndef sign_in\n  visit '/users/sign_in'\n  fill_in \"Email\", :with => @visitor[:email]\n  fill_in \"Password\", :with => @visitor[:password]\n  click_button \"Sign in\"\nend\n\n### GIVEN ###\nGiven /^I am not logged in$/ do\n  visit '/users/sign_out'\nend\n\nGiven /^I am logged in$/ do\n  create_user\n  sign_in\nend\n\nGiven /^I exist as a user$/ do\n  create_user\nend\n\nGiven /^I do not exist as a user$/ do\n  create_visitor\n  delete_user\nend\n\nGiven /^I exist as an unconfirmed user$/ do\n  create_unconfirmed_user\nend\n\n### WHEN ###\nWhen /^I sign in with valid credentials$/ do\n  create_visitor\n  sign_in\nend\n\nWhen /^I sign out$/ do\n  visit '/users/sign_out'\nend\n\nWhen /^I sign up with valid user data$/ do\n  create_visitor\n  sign_up\nend\n\nWhen /^I sign up with an invalid email$/ do\n  create_visitor\n  @visitor = @visitor.merge(:email => \"notanemail\")\n  sign_up\nend\n\nWhen /^I sign up without a password confirmation$/ do\n  create_visitor\n  @visitor = @visitor.merge(:password_confirmation => \"\")\n  sign_up\nend\n\nWhen /^I sign up without a password$/ do\n  create_visitor\n  @visitor = @visitor.merge(:password => \"\")\n  sign_up\nend\n\nWhen /^I sign up with a mismatched password confirmation$/ do\n  create_visitor\n  @visitor = @visitor.merge(:password_confirmation => \"changeme123\")\n  sign_up\nend\n\nWhen /^I return to the site$/ do\n  visit '/'\nend\n\nWhen /^I sign in with a wrong email$/ do\n  @visitor = @visitor.merge(:email => \"wrong@example.com\")\n  sign_in\nend\n\nWhen /^I sign in with a wrong password$/ do\n  @visitor = @visitor.merge(:password => \"wrongpass\")\n  sign_in\nend\n\nWhen /^I edit my account details$/ do\n  click_link \"Edit account\"\n  fill_in \"Name\", :with => \"newname\"\n  fill_in \"user_current_password\", :with => @visitor[:password]\n  click_button \"Update\"\nend\n\nWhen /^I look at the list of users$/ do\n  visit '/'\nend\n\n### THEN ###\nThen /^I should be signed in$/ do\n  page.should have_content \"Logout\"\n  page.should_not have_content \"Sign up\"\n  page.should_not have_content \"Login\"\nend\n\nThen /^I should be signed out$/ do\n  page.should have_content \"Sign up\"\n  page.should have_content \"Login\"\n  page.should_not have_content \"Logout\"\nend\n\nThen /^I see an unconfirmed account message$/ do\n  page.should have_content \"You have to confirm your account before continuing.\"\nend\n\nThen /^I see a successful sign in message$/ do\n  page.should have_content \"Signed in successfully.\"\nend\n\nThen /^I should see a successful sign up message$/ do\n  page.should have_content \"Welcome! You have signed up successfully.\"\nend\n\nThen /^I should see an invalid email message$/ do\n  page.should have_content \"Emailis invalid\"\nend\n\nThen /^I should see a missing password message$/ do\n  page.should have_content \"Passwordcan't be blank\"\nend\n\nThen /^I should see a missing password confirmation message$/ do\n  page.should have_content \"Passworddoesn't match confirmation\"\nend\n\nThen /^I should see a mismatched password message$/ do\n  page.should have_content \"Passworddoesn't match confirmation\"\nend\n\nThen /^I should see a signed out message$/ do\n  page.should have_content \"Signed out successfully.\"\nend\n\nThen /^I see an invalid login message$/ do\n  page.should have_content \"Invalid email or password.\"\nend\n\nThen /^I should see an account edited message$/ do\n  page.should have_content \"You updated your account successfully.\"\nend\n\nThen /^I should see my name$/ do\n  create_user\n  page.should have_content @user[:name]\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":4309}]],"length":4309}
